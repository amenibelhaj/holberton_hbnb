from alembic import op
import sqlalchemy as sa
import uuid

# revision identifiers, used by Alembic.
revision = '29fd9f6c18ba'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('amenities', schema=None) as batch_op:
        # Alter the 'id' column to String(36) for UUIDs
        batch_op.alter_column('id',
               existing_type=sa.INTEGER(),
               type_=sa.String(length=36),
               existing_nullable=False)
        # Create a unique constraint on 'id'
        batch_op.create_unique_constraint('pk_amenities_id', ['id'])
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('amenities', schema=None) as batch_op:
        # Drop the unique constraint on 'id'
        batch_op.drop_constraint('pk_amenities_id', type_='unique')
        # Revert the column back to INTEGER type
        batch_op.alter_column('id',
               existing_type=sa.String(length=36),
               type_=sa.INTEGER(),
               existing_nullable=False)
    # ### end Alembic commands ###
